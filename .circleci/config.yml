# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  working_directory: /tmp

version: 2
jobs:
  docker_snapshot_arm32v7:
    <<: *defaults
    machine: true
    working_directory: ~/repo
    steps:
    - checkout

    - attach_workspace:
        at: /tmp/workspace

    - run:
        name: List files on directory /tmp/workspace/build
        command: ls -l /tmp/workspace/build

    - run:
        name: Copy artifact
        command: |
          mkdir -p ~/repo/build
          cp /tmp/workspace/build/*.jar ~/repo/build

    - run:
        name: Build Docker image
        command: |
          export GIT_COMMIT=$(git rev-parse --short HEAD)
          docker build -t stockanalyses/indicator_arm32v7:$GIT_COMMIT .

    - run:
        name: Push to DockerHub
        command: |
          export GIT_COMMIT=$(git rev-parse --short HEAD)
          docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
          docker push stockanalyses/indicator_arm32v7:$GIT_COMMIT
  docker_snapshot_amd64:
    <<: *defaults
    machine: true
    working_directory: ~/repo
    steps:
    - checkout

    - attach_workspace:
        at: /tmp/workspace

    - run:
        name: List files on directory /tmp/workspace/build
        command: ls -l /tmp/workspace/build

    - run:
        name: Copy artifact
        command: |
          mkdir -p ~/repo/build
          cp /tmp/workspace/build/*.jar ~/repo/build

    - run:
        name: Build Docker image
        command: |
          export GIT_COMMIT=$(git rev-parse --short HEAD)
          docker build -t stockanalyses/indicator:$GIT_COMMIT .

    - run:
        name: Push to DockerHub
        command: |
          export GIT_COMMIT=$(git rev-parse --short HEAD)
          docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
          docker push stockanalyses/indicator:$GIT_COMMIT

  publish_release:
    <<: *defaults
    machine: true
    working_directory: ~/repo
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: Copy artifact
        command: |
          mkdir -p ~/repo/build
          cp /tmp/workspace/build/*.jar ~/repo/build
    - run:
        name: Build Docker image
        command: |
          export GIT_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          docker build -t stockanalyses/indicator:$GIT_TAG .
    - run:
        name: Push to DockerHub
        command: |
          export GIT_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
          docker push stockanalyses/indicator:$GIT_TAG

  build_release:
    <<: *defaults
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk
    - image: circleci/mysql:5.7.21
      environment:
        MYSQL_DATABASE: "stoxygen_indicator"
        MYSQL_ROOT_HOST: "%"
        MYSQL_USER: "sto2-indicator"
        MYSQL_PASSWORD: "123456"
    - image: rabbitmq:3.6-alpine
      ports:
      - "5672:5672"

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "pom.xml" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: mvn dependency:go-offline

    - save_cache:
        paths:
        - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}

    # run tests!
    - run:
        name: Build application
        environment:
          SPRING_DATASOURCE_URL: "jdbc:mysql://localhost:3306/stoxygen_indicator?useSSL=false"
          SPRING_DATASOURCE_USERNAME: "sto2-indicator"
          SPRING_DATASOURCE_PASSWORD: "123456"
          FLYWAY_LOCATIONS: "db/migration/{vendor}/"
          SPRING_JPA_PROPTERTIES_HIBERNATE_DIALECT: "org.hibernate.dialect.MySQL5InnoDBDialect"
          SPRING_JPA_HIBERNATE_DDL-AUTO: "validate"
          SPRING_RABBITMQ_HOST: "localhost"
          SPRING_RABBITMQ_PORT: "5672"
          SPRING_RABBITMQ_USERNAME: "guest"
          SPRING_RABBITMQ_PASSWORD: "guest"
        command: mvn clean package -Pprod -Dspring.profiles.active=prod

    - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
        path: target/surefire-reports

    - store_artifacts:
        path: build

    - persist_to_workspace:
        root: ~/repo
        paths:
        - build/*

  build_snapshot:
    <<: *defaults
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk
    - image: circleci/mysql:5.7.21
      environment:
        MYSQL_DATABASE: "stoxygen_indicator"
        MYSQL_ROOT_HOST: "%"
        MYSQL_USER: "sto2-indicator"
        MYSQL_PASSWORD: "123456"
    - image: rabbitmq:3.6-alpine
      ports:
      - "5672:5672"

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "pom.xml" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: mvn dependency:go-offline

    - save_cache:
        paths:
        - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}

    # run tests!
    - run:
        name: Build application
        environment:
          SPRING_DATASOURCE_URL: "jdbc:mysql://localhost:3306/stoxygen_indicator?useSSL=false"
          SPRING_DATASOURCE_USERNAME: "sto2-indicator"
          SPRING_DATASOURCE_PASSWORD: "123456"
          FLYWAY_LOCATIONS: "db/migration/{vendor}/"
          SPRING_JPA_PROPTERTIES_HIBERNATE_DIALECT: "org.hibernate.dialect.MySQL5InnoDBDialect"
          SPRING_JPA_HIBERNATE_DDL-AUTO: "validate"
          SPRING_RABBITMQ_HOST: "localhost"
          SPRING_RABBITMQ_PORT: "5672"
          SPRING_RABBITMQ_USERNAME: "guest"
          SPRING_RABBITMQ_PASSWORD: "guest"
        command: mvn clean package -Pdev -Dspring.profiles.active=dev

    - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
        path: target/surefire-reports

    - store_artifacts:
        path: build

    - persist_to_workspace:
        root: ~/repo
        paths:
        - build/*


workflows:
  version: 2
  release:
    jobs:
    - build_release:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /v[0-9]+\.[0-9]+\.[0-9]+/
    - publish_release:
        requires:
        - build_release
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /v[0-9]+\.[0-9]+\.[0-9]+/
  snapshot:
    jobs:
    - build_snapshot:
        filters:
          tags:
            ignore: /v[0-9]+\.[0-9]+\.[0-9]+/
          branches:
            only: master
    - docker_snapshot_amd64:
        requires:
        - build_snapshot
        filters:
          tags:
            ignore: /v[0-9]+\.[0-9]+\.[0-9]+/
          branches:
            only: master
    - docker_snapshot_arm32v7:
        requires:
        - build_snapshot
        filters:
          tags:
            ignore: /v[0-9]+\.[0-9]+\.[0-9]+/
          branches:
            only: master